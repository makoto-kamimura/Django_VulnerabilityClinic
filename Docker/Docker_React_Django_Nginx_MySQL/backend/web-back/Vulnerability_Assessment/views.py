from django.shortcuts import render
from django.conf import settings
from django.http import JsonResponse

# work_他プロセス呼び出し_bash実行用_OSインジェクションの恐れあり
import subprocess
# work_ログファイル用日時
import datetime

# view
# view_main
def main(request):
    return render(request, 'Vulnerability_Assessment/main.html', {})

# view_load
def load(request):
    return render(request, 'Vulnerability_Assessment/load.html', {})

# view_result
def result(request):
    return render(request, 'Vulnerability_Assessment/result.html', {})

# view_caution
def caution(request):
    return render(request, 'Vulnerability_Assessment/caution.html', {})

# exe
# exe_ajax_Vulnerability_Assessment
def ajax_Vulnerability_Assessment(request):
    # work_リクエスト情報取得

    assessment_url = str(request.POST.get('assessment'))

    # work_ファイル出力用日付
    assessment_time = "{0:%Y_%m_%d_%H_%M_%S}".format(datetime.datetime.now())

    # work_ファイル配置ディレクトリ
    output_directory = "./tmp/"

    # work_nikto実行ファイルディレクトリ
    nikto_directory = "Vulnerability_Assessment/program/nikto.pl -h"

    # work_ドメインorIPaddressの判別処理_https://qiita.com/Alice1017/items/b277cf3e7f4a0a8d2db4
    # if assessment.isnumeric()
        # work_IPアドレスのバリデーション処理_正規表現
        # ip_address = assessment

    # work_nikto_programの階層_要テスト_出力要確認_https://github.com/sullo/nikto
    # nikto_directory = "Vulnerability_Assessment/program/nikto.pl -h http://www.example.com -o ./tmp/out.json"

    # work_実行変数
    exe = nikto_directory + " " + assessment_url + " -o " + output_directory + assessment_time + ".json"
    # exe_result = subprocess.run([exe], shell=True, check=True, encoding='utf-8', stderr=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)
    # proc = subprocess.Popen("cat {} | cat -n; sleep 60".format('named_pipe'), shell=True, stdout=PIPE, stderr=PIPE, text=True)

    exe_result = subprocess.run([exe], shell=True, stderr=subprocess.PIPE, stdout=subprocess.PIPE, encoding='utf-8')

    # try:
    #     # work
    #     subprocess.run(exe, shell=True, check=True, encoding='utf-8', stderr=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)
    #     # exe_result = subprocess.run(exe, shell=True, check=True, encoding='utf-8', stderr=subprocess.PIPE, stdout=subprocess.PIPE, universal_newlines=True)

    #     # work_出力時は翻訳_要検討
    # except subprocess.CalledProcessError:
    #     # work_エラー表示内容精査
    #     print('kamimura1: Failed to execute the external program.', file=sys.stderr)

    # if exe_result.returncode != 0:
    #     # work_エラー表示内容精査
    #     print('kamimura2: ls failed.', file=sys.stderr)
    #     sys.exit(1)

    #     # work_実行ログファイル出力

    d = {
        'assessment': str(exe),
    }
    # d = {
    #     'assessment': str(exe_result.stdout),
    # }

    return JsonResponse(d)

# work
# view_ajax_test
def ajax_test(request):
    return render(request, 'Vulnerability_Assessment/ajax_test.html', {})
# view_ajax_test2
def ajax_test2(request):
    return render(request, 'Vulnerability_Assessment/ajax_test2.html', {})

# exe_ajax_number
def ajax_number(request):
    now = datetime.datetime.now()
    time = "{0:%Y_%m_%d_%H_%M_%S}".format(now)
    number1 = int(request.POST.get('number1'))
    number2 = int(request.POST.get('number2'))
    plus = number1 + number2
    minus = number1 - number2
    d = {
        'plus': plus,
        'minus': minus,
        'time': time,
    }
    return JsonResponse(d)